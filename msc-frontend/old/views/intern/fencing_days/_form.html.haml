= nested_form_for([:intern, @fencing_day], html: {class: "fencing-days-form"}) do |f|
  - if @fencing_day.errors.any?
    %ul.form-errors.alert-danger
      - @fencing_day.errors.messages.each do |msg|
        - msg[1].each do |message|
          - unless message.eql?(I18n.t(:"errors.messages.invalid"))
            %li
              - if msg[0].to_s.split(".").length.eql?(2)
                - mod = msg[0].to_s.split(".")[0].singularize.camelize.constantize
                - att = msg[0].to_s.split(".")[1]
                = "#{mod.model_name.human}: #{mod.human_attribute_name(att)} #{message}"
              - else
                = "#{FencingDay.human_attribute_name(msg[0])} #{message}"
  .form-group.row
    .col-md-6
      %div= f.label :art, "#{FencingDay.human_attribute_name(:art)} #{required_asterix}".html_safe
      = f.select :art, FencingDay.art.options, {}, {class: "form-control", style: "width: 150px;"}
    .clearfix
  .form-group.row
    .col-md-6
      %div= f.label :location, "#{FencingDay.human_attribute_name(:location)} #{required_asterix}".html_safe
      = f.text_field :location, {class: "form-control"}
    .col-md-6
      %div= f.label :held_on, "#{FencingDay.human_attribute_name(:held_on)} #{required_asterix}".html_safe
      = f.text_field :held_on, {value: (f.object.held_on.present? ? I18n.l(f.object.held_on, format: :very_strong) : nil), class: "form-control datetimepicker"}
    .clearfix
  .form-group
    %div= f.label :description
    = f.text_area :description, {class: "form-control"}

  = f.fields_for :fencing_matches do |fencing_match_form|
    .form-group.row
      .col-md-3
        %div= fencing_match_form.label :art, "#{FencingMatch.human_attribute_name(:art)} #{required_asterix}".html_safe
        = fencing_match_form.select :art, FencingMatch.art.options, {}, {class: "form-control"}
      .col-md-3
        %div= fencing_match_form.label :user_time, "#{FencingMatch.human_attribute_name(:user_time)}".html_safe
        = fencing_match_form.text_field :user_time, {value: (fencing_match_form.object.user_time.present? ? fencing_match_form.object.user_time : (fencing_match_form.object.time_start.present? ? I18n.l(fencing_match_form.object.time_start, format: :am) : nil)) , class: "form-control"}
      .clearfix
    .form-group.row
      .col-md-5
        %div= fencing_match_form.label :corp_first, "#{FencingMatch.human_attribute_name(:corp_first)} #{required_asterix}".html_safe
        = fencing_match_form.text_field :corp_first, {class: "form-control"}
      .col-md-2
        %div= fencing_match_form.label :corp_first_match, "#{FencingMatch.human_attribute_name(:corp_first_match)} #{required_asterix}".html_safe
        = fencing_match_form.text_field :corp_first_match, {class: "form-control"}
      .col-md-5
        %div= fencing_match_form.label :corp_first_doctor, "#{FencingMatch.human_attribute_name(:corp_first_doctor)}".html_safe
        = fencing_match_form.text_field :corp_first_doctor, {class: "form-control"}
      .clearfix
    .form-group.row
      .col-md-5
        %div= fencing_match_form.label :corp_second, "#{FencingMatch.human_attribute_name(:corp_second)} #{required_asterix}".html_safe
        = fencing_match_form.text_field :corp_second, {class: "form-control"}
      .col-md-2
        %div= fencing_match_form.label :corp_second_match, "#{FencingMatch.human_attribute_name(:corp_second_match)} #{required_asterix}".html_safe
        = fencing_match_form.text_field :corp_second_match, {class: "form-control"}
      .col-md-5
        %div= fencing_match_form.label :corp_second_doctor, "#{FencingMatch.human_attribute_name(:corp_second_doctor)}".html_safe
        = fencing_match_form.text_field :corp_second_doctor, {class: "form-control"}
        = fencing_match_form.link_to_remove content_tag(:span, nil, {class: "glyphicon glyphicon-remove"}).html_safe, {style: "top: 47px;", class: "btn btn-default remove-nested-model", data: {"no-turbolink" => true, toggle: "tooltip", placement: "bottom"}, title: I18n.t(:"fencing_days.remove_nested_match")}
      .clearfix
  .form-group
    = f.link_to_add I18n.t(:"fencing_days.add_nested_match"), :fencing_matches, { class: "btn btn-default btn-xs" }
    = object_error f.object, :fencing_matches


  .form-group
    = f.submit I18n.t(:save), {class: "btn btn-primary pull-right"}
    .clearfix
  .form-group.required-explaination
    = required_asterix
    = I18n.t(:required_explain)
