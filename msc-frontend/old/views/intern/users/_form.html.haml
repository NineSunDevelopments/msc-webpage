= form_for([:intern, @user], html: { autocomplete: :off }) do |f|
  - if @user.errors.any?
    %ul.form-errors.alert-danger
      = @user.errors.full_messages.map { |msg| content_tag(:li, msg) }.join.html_safe
  .form-group
    %div= f.label :email, "#{User.human_attribute_name(:email)} #{required_asterix}".html_safe
    = f.email_field :email, {class: "form-control"}
  - if @user.new_record?
    .form-group
      %div= f.label :role, "#{User.human_attribute_name(:role)} #{required_asterix}".html_safe
      = f.select :role, options_for_select(%w(admin philister).map{|v| [I18n.t(:"enumerize.user.role.#{v}"), v]}, selected: @user.role), {}, {class: "form-control chzn-select", data: {placeholder: I18n.t(:"users.choose_role")}}
  - elsif @user.corp.present?
    .form-group
      %div= f.label :phone, "#{User.human_attribute_name(:phone)} #{required_asterix}".html_safe
      = f.text_field :phone, {class: "form-control"}
    .form-group
      %div= f.label :website, "#{User.human_attribute_name(:website)} #{required_asterix}".html_safe
      = f.text_field :website, {class: "form-control"}
  .row
    #for-password.col-xs-6
      %div= f.label :password, "#{User.human_attribute_name(:password)} #{double_required_asterix}".html_safe
      = f.password_field :password, { id: "user_password", class: "form-control", autocomplete: :off }
    #for-password-confirmation.col-xs-6
      %div= f.label :password_confirmation, "#{User.human_attribute_name(:password_confirmation)} #{double_required_asterix}".html_safe
      = f.password_field :password_confirmation, { id: "user_password_confirmation", class: "form-control", autocomplete: :off }
    .clearfix
  .row{style: "margin-top: 15px;"}
    .col-xs-6.checkbox.checkbox-info{style: "margin: 0px; padding-left: 34px;"}
      = check_box_tag :show_password, nil, false, {class: "checkbox-primary"}
      %label{for: "show_password"}= I18n.t(:"users.show_password")
    .col-xs-6{style: "margin: 0px;"}
      = link_to I18n.t(:"users.generate_password"), "javascript: void(0);", {id: "generate-password-link"}
    .clearfix
  .form-group
    = f.submit I18n.t(:save), {class: "btn btn-primary pull-right"}
    .clearfix
  .form-group.required-explaination
    = required_asterix
    = I18n.t(:required_explain)
    - if @user.persisted?
      %br
      = double_required_asterix
      = I18n.t(:"users.double_required_explain")
