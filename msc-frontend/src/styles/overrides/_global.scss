/**********************************************************************************************************************/
/*                                                                                                                    */
/*    IMPORTANT IMPORTANT IMPORTANT IMPORTANT IMPORTANT IMPORTANT IMPORTANT IMPORTANT IMPORTANT IMPORTANT IMPORTANT   */
/*                                                                                                                    */
/*       These are global styles, which will override any scoped component-level styles. Use extreme care here.       */
/*                Only set styles here that need to be global and can't be scoped to any component.                   */
/*                                                                                                                    */
/**********************************************************************************************************************/

@use "variables" as var;
@use "mixins" as mix;
@use "sass:color";

* {
  box-sizing: border-box;
  font-family: var.$font-family;
  font-weight: var.$font-weight-normal;
}

document {
  overflow-x: hidden;
  background-color: var.$light-background-color;
}

html, body {
  overflow-x: hidden;
  width: 100vw;
  padding: 0;
  margin: 0;
  font-family: var.$font-family;
  font-weight: var.$font-weight-normal;

  background-color: var.$light-background-color;
  color: var.$light-text-color /*
  @media print {
    height: auto !important;
  }
  */
}

body {
  margin: 0;
  font-family: Roboto, "Helvetica Neue", sans-serif;
}

// Styling for navigations
$nav-items-gap: 3px;
$nav-items-height: 47px;


h1, h2, h3, h4, h5, h6, h7, h8, h9 {
  margin: 0.67em 0;
  padding: 0;
  line-height: 1.2;
  color: color.adjust(var.$highlight, $lightness: -20%);
  font-variant: small-caps;
  display: block;
  border-bottom: 1px solid color.adjust(var.$highlight, $lightness: 10%);

  &.plain {
    border-bottom: 0 !important;
  }

  small {
    display: block;
    font-size: .66em;
    color: var.$grey;
    margin-top: 5px;
    margin-left: 15px;
  }
}

.dark {
  h1, h2, h3, h4, h5, h6, h7, h8, h9 {
    color: color.adjust(var.$highlight, $lightness: 10%);
    border-bottom: 1px solid color.adjust(var.$highlight, $lightness: 20%);

    small {
      color: color.adjust(var.$grey, $lightness: 40%);
    }
  }
}

h1 {
  font-size: 2.5rem;
  font-weight: 600;
  text-align: center;
}

h2 {
  font-size: 2rem;
  font-weight: 600;
}

h3 {
  font-size: 1.75rem;
  font-weight: 500;
}

h4 {
  font-size: 1.5rem;
  font-weight: 500;
}

h5 {
  font-size: 1.25rem;
  font-weight: 500;
}

h6 {
  font-size: 1rem;
  font-weight: 500;
}

h7 {
  font-size: 0.875rem;
  font-weight: 400;
}

h8 {
  font-size: 0.75rem;
  font-weight: 400;
}

h9 {
  font-size: 0.625rem;
  font-weight: 400;
}

p.long-text {
  font-size: 1rem;
  line-height: 1.6rem;
  color: var.$light-text-color;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;

  text-align: justify;
  margin-left: 1.5rem;
  margin-right: 1.5rem;
  margin-bottom: 1rem;
  text-indent: -1rem;
}

a {
  color: color.adjust(var.$highlight, $lightness: -20%);
  text-decoration: underline;
  transition: color 0.2s ease-in-out;

  &:hover {
    color: var.$low_level_highlight;
    text-decoration: underline;
  }
}

.dark {
  p, span, a {
    color: var.$dark-text-color;
  }
}

ul, ol {
  margin: 0 0 0 1.25rem;
  padding: 0;
  color: var.$dark-grey;
  line-height: 1.2rem;

  li {
    margin-bottom: 0.33rem;
    text-align: left;

    &::marker {
      color: color.adjust(var.$highlight, $lightness: -20%);
    }
  }

  ul, ol {
    margin: 0.5rem 0 0.5rem 1.25rem;
  }
}

section {
  padding: 70px 30px;
  background-color: var.$light-background-color;
  color: var.$light-text-color;

  &.dark {
    background-color: var.$dark-background-color;
    color: var.$dark-text-color
  }

  .content {
    max-width: 1200px;
    margin: 0 auto 75px;
  }
}

ul.nav {
  list-style-type: none;
  margin: 0;
  padding: 0;

  .nav-sub {
    padding: $nav-items-gap 0 0 0;
  }

  .nav-item, .nav-subitem {
    line-height: $nav-items-height;
    height: $nav-items-height;
    background: var.$darker-grey;
    margin: 0 0 $nav-items-gap 0;
    padding: 0;
    font-size: 20px;

    .active {
      background: var.$highlight;
    }

    a {
      display: grid;
      height: $nav-items-height;
      font-size: 20px;
      color: var.$white;
      text-decoration: none;
      margin: 0;
      cursor: pointer;
      grid-template-columns: 60px 1fr 50px;
      white-space: nowrap;

      [class^="icon-"] {
        text-align: center;
      }

      div {
        display: block;
        width: 50px;
        padding: 0;
        margin: 0;
        text-align: center;
        font-size: 15px;

        .hidden {
          overflow: hidden;
          display: none !important;
        }
      }
    }

    a:hover {
      background: var.$highlight;
    }

    a.open {
      font-size: 15px;
    }

    a.child-indicator {
      font-size: 10px;
    }
  }


  .nav-subitem {
    background: var.$grey;
    font-size: 16px;

    a {
      font-size: 16px;
      grid-template-columns: 60px 1fr 10px;

      &.nav-action {
        justify-content: center;
        display: flex;
        flex-direction: row;

        span {
          padding-right: 10px;
        }
      }
    }
  }
}

.color {
  &.warning {
    color: var.$warning;
    fill: var.$warning;
  }

  &.error {
    color: var.$error;
    fill: var.$error;
  }

}

.bold {
  font-weight: bold;
}

.user-menu {
  border-radius: 0;
  padding: 0 !important;
  margin: 0 !important;

  background: var.$navi-bg;
  min-height: calc(#{$nav-items-height} * 2) !important;

  .mat-menu-content {
    padding: 0 !important;
    margin: 0 !important;
    min-width: var.$sidebar-max-width;
  }
}

.inline-block {
  display: inline-block;
}

.full-width {
  width: 100%;
}

.half-width {
  width: 50%;
}

.third-width {
  width: 33%;
}

.quarter-width {
  width: 25%;
}

.text-ellipsis {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

.align-center {
  text-align: center !important;
  justify-content: center !important;
}

.align-left {
  text-align: left !important;
  justify-content: left !important;
}

.align-right {
  text-align: right !important;
  justify-content: right !important;
}

.vertical-align-center {
  display: flex !important;
  align-items: center !important;
}

.pull-right {
  float: right;
}

.pull-left {
  float: left;
}

.clearfix::after {
  content: "";
  clear: both;
  display: table;
}

::ng-deep {
  .mat-form-field-infix {
    width: auto !important;
  }

}

router-outlet {
  display: none !important;
}

.content {
  & > router-outlet + * {
    display: inline-block;
    height: 100%;
    width: 100%;
  }
}

.mat-focused .mat-form-field-label,
.mat-form-field-label:not(.mat-form-field-empty) {
  font-size: 20px;
}

.mat-button-toggle-checked {
  .mat-button-toggle-button {
    background-color: var.$highlight !important;
    font-weight: bold !important;
  }
}

.content-page {
  width: 100%;
  height: 100%;
  display: flex;
  flex-direction: column;

  .header {
    display: grid;
    grid-gap: 25px;
    grid-template-columns: 2fr 1fr;
    align-items: stretch;
    justify-items: start;

    @include mix.media-breakpoint-down(var.$tablet) {
      grid-template-columns: 1fr !important;
    }

    &.full {
      grid-template-columns: 1fr;
      min-height: 0;
    }

    .overview {
      padding: 20px 10px;


      .grid {
        align-items: first baseline;

        &.grid-2 {
          align-items: last baseline;
        }

        p {
          font-weight: bold;
          margin-left: 10px;
        }

        span {
          justify-self: right;
          white-space: nowrap;
        }
      }
    }


    .controls,
    .summary,
    breadcrumbs {
      width: 100%;
      place-self: start;
    }

    /*
        .controls {
          @media print {
            display: none;
          }
        }*/

    @include mix.media-breakpoint-down(var.$mobile) {
      grid-template-columns: 1fr;
    }

    /*    @media print {
          page-break-after: always;
        }*/
  }


  .date-picker {
    justify-self: center;
    width: 300px;
  }

  .content {
    flex-grow: 1;
    width: 100%;
    min-height: 10px;
    margin-top: 10px;

    /*  @media print {
        page-break-before: always;
      }*/
  }

  /*  @media print {
      height: auto !important;
    }*/

}

.clickable {
  cursor: pointer;
}


.hidden {
  display: none;
}

mat-ink-bar,
.mat-calendar-body-in-range::before {
  background-color: var.$highlight !important;
}

.square {
  width: 50%;
}

.square:after {
  content: "";
  display: block;
  padding-bottom: 100%;
}

mat-form-field {
  width: 100%;
}

.center-content {
  display: flex;
  width: 100%;
  height: 100%;
  align-items: center;
  justify-content: center;
}

.inner-widget-wrapper {
  border: 1px solid color.adjust(var.$grey, $lightness: 50%);
  border-top-left-radius: 3px;
  border-top-right-radius: 3px;
  height: 100%;
  flex-direction: column;
  background-color: white;

  .widget-content {
    height: 100%;
    width: 100%;
    overflow-y: auto;
  }

  &.edit-mode {
    cursor: grab;

    .widget-content * {
      display: none;
    }
  }
}

.progress {
  position: relative;
  text-align: left !important;

  & > span {
    position: absolute;
    color: var.$low_level_highlight;
    top: 50%;
    left: 50%;
    background-color: white;
    transform: translate(-50%, -50%);
    padding: 2px;
  }
}

.parallax {
  /* Set a specific height */
  height: 500px;
  min-height: 500px;

  /* Create the parallax scrolling effect */
  background-attachment: fixed;
  background-position: top;
  background-repeat: no-repeat;
  background-size: cover;

  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;

  box-shadow: inset 0 0 100px 100px rgba(0, 0, 0, 0.2);

  & > * {
    width: 100%;
    background-color: transparentize(var.$dark-background-color, 0.1);
  }
}

table.mat-mdc-table {
  background-color: var.$dark-grey;

  th {
    font-weight: bold;
    text-align: center;
    text-overflow-ellipsis: ellipsis;
    white-space: nowrap;
    overflow: hidden;
  }

  td {
    text-overflow-ellipsis: ellipsis;
    white-space: nowrap;
    overflow: hidden;
  }

  tr.clickable:hover {
    background-color: rgba(var.$grey, 0.1);
  }
}

mat-accordion.mat-accordion .mat-expansion-panel-header,
div.mat-expansion-panel-content-wrapper {
  background-color: var.$dark-grey !important;
}

.icon-button {
  mat-icon.mat-icon {
    margin-right: 0 !important;
    margin-left: 0 !important;
  }
}
